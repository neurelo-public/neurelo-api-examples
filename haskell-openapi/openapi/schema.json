{
  "openapi": "3.0.3",
  "info": {
    "title": "Neurelo API Spec",
    "version": "0"
  },
  "servers": [
    {
      "url": "https://us-east-2.aws.neurelo.dev"
    },
    {
      "url": "https://us-west-2.aws.neurelo.dev"
    }
  ],
  "paths": {
    "/rest/user": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Retrieve multiple user records",
        "operationId": "findUser",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSelectInput"
                }
              }
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userWhereInput"
                }
              }
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/userOrderByWithRelationInput"
                  }
                }
              }
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0.0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Results found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/user"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "description": "Create multiple user records",
        "operationId": "createManyUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/userCreateManyInput"
                },
                "minItems": 1
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Records created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AffectedRowsOutput"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Delete multiple user records",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userWhereInput"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Records deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AffectedRowsOutput"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "description": "Update multiple user records",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userWhereInput"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userUpdateManyInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Records updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AffectedRowsOutput"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rest/user/__aggregate": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Aggregate by user",
        "operationId": "aggregateByUser",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAggregateInput"
                }
              }
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userWhereInput"
                }
              }
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/userOrderByWithRelationInput"
                  }
                }
              }
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0.0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Results found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateUser"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rest/user/__groupBy": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Group by user",
        "operationId": "groupByUser",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupByInput"
                }
              }
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userWhereInput"
                }
              }
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/userOrderByWithAggregationInput"
                  }
                }
              }
            }
          },
          {
            "name": "group_by",
            "in": "query",
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserScalarFieldEnum"
                  }
                }
              }
            }
          },
          {
            "name": "having",
            "in": "query",
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userScalarWhereWithAggregatesInput"
                }
              }
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0.0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Results found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserGroupByOutputType"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rest/user/__one": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Create one user record",
        "operationId": "createOneUser",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSelectInput"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userCreateInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Record created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rest/user/email/{value}": {
      "parameters": [
        {
          "name": "value",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "User"
        ],
        "description": "Find one user record by email",
        "operationId": "findUserByEmail",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSelectInput"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Results found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Delete one user record by email",
        "operationId": "deleteUserByEmail",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSelectInput"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "description": "Update one user record by email",
        "operationId": "updateUserByEmail",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSelectInput"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userUpdateInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Record updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rest/user/{value}": {
      "parameters": [
        {
          "name": "value",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "User"
        ],
        "description": "Find one user record by id",
        "operationId": "findUserById",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSelectInput"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Results found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Delete one user record by id",
        "operationId": "deleteUserById",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSelectInput"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "description": "Update one user record by id",
        "operationId": "updateUserById",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSelectInput"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userUpdateInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Record updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/_ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AffectedRowsOutput": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AggregateUser": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/UserCountAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/UserMaxAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/UserMinAggregateOutputType"
          }
        },
        "additionalProperties": false
      },
      "NestedIntFilter": {
        "type": "object",
        "properties": {
          "eq": {
            "type": "integer",
            "format": "int32"
          },
          "equals": {
            "type": "integer",
            "format": "int32"
          },
          "gt": {
            "type": "integer",
            "format": "int32"
          },
          "gte": {
            "type": "integer",
            "format": "int32"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "lt": {
            "type": "integer",
            "format": "int32"
          },
          "lte": {
            "type": "integer",
            "format": "int32"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer",
                "format": "int32"
              },
              {
                "$ref": "#/components/schemas/NestedIntFilter"
              }
            ]
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false
      },
      "NestedIntNullableFilter": {
        "type": "object",
        "properties": {
          "eq": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "equals": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "gt": {
            "type": "integer",
            "format": "int32"
          },
          "gte": {
            "type": "integer",
            "format": "int32"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          "isSet": {
            "type": "boolean"
          },
          "lt": {
            "type": "integer",
            "format": "int32"
          },
          "lte": {
            "type": "integer",
            "format": "int32"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              {
                "$ref": "#/components/schemas/NestedIntNullableFilter"
              }
            ],
            "nullable": true
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        },
        "additionalProperties": false
      },
      "NestedStringFilter": {
        "type": "object",
        "properties": {
          "contains": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "eq": {
            "type": "string"
          },
          "equals": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringFilter"
              }
            ]
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "startsWith": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "NestedStringNullableFilter": {
        "type": "object",
        "properties": {
          "contains": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "eq": {
            "type": "string",
            "nullable": true
          },
          "equals": {
            "type": "string",
            "nullable": true
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            }
          },
          "isSet": {
            "type": "boolean"
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "$ref": "#/components/schemas/NestedStringNullableFilter"
              }
            ],
            "nullable": true
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            }
          },
          "startsWith": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "NestedStringNullableWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedStringNullableFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedStringNullableFilter"
          },
          "contains": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "eq": {
            "type": "string",
            "nullable": true
          },
          "equals": {
            "type": "string",
            "nullable": true
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            }
          },
          "isSet": {
            "type": "boolean"
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "$ref": "#/components/schemas/NestedStringNullableWithAggregatesFilter"
              }
            ],
            "nullable": true
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            }
          },
          "startsWith": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "NestedStringWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedStringFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedStringFilter"
          },
          "contains": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "eq": {
            "type": "string"
          },
          "equals": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringWithAggregatesFilter"
              }
            ]
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "startsWith": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "NullableStringFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "type": "string",
            "nullable": true
          },
          "unset": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "QueryMode": {
        "type": "string",
        "enum": [
          "default",
          "insensitive"
        ]
      },
      "SortOrder": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ]
      },
      "StringFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "StringFilter": {
        "type": "object",
        "properties": {
          "contains": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "eq": {
            "type": "string"
          },
          "equals": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/QueryMode"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringFilter"
              }
            ]
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "startsWith": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "StringNullableFilter": {
        "type": "object",
        "properties": {
          "contains": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "eq": {
            "type": "string",
            "nullable": true
          },
          "equals": {
            "type": "string",
            "nullable": true
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            }
          },
          "isSet": {
            "type": "boolean"
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/QueryMode"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "$ref": "#/components/schemas/NestedStringNullableFilter"
              }
            ],
            "nullable": true
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            }
          },
          "startsWith": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "StringNullableWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedStringNullableFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedStringNullableFilter"
          },
          "contains": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "eq": {
            "type": "string",
            "nullable": true
          },
          "equals": {
            "type": "string",
            "nullable": true
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            }
          },
          "isSet": {
            "type": "boolean"
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/QueryMode"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "$ref": "#/components/schemas/NestedStringNullableWithAggregatesFilter"
              }
            ],
            "nullable": true
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            }
          },
          "startsWith": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "StringWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedStringFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedStringFilter"
          },
          "contains": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "eq": {
            "type": "string"
          },
          "equals": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/QueryMode"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringWithAggregatesFilter"
              }
            ]
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "startsWith": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UserAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "_all",
                "email",
                "id",
                "name",
                "passwordhash"
              ]
            },
            "minItems": 1
          },
          "_max": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "email",
                "id",
                "name",
                "passwordhash"
              ]
            },
            "minItems": 1
          },
          "_min": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "email",
                "id",
                "name",
                "passwordhash"
              ]
            },
            "minItems": 1
          }
        },
        "additionalProperties": false,
        "minProperties": 1
      },
      "UserCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "_all": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "integer",
            "format": "int32"
          },
          "passwordhash": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserGroupByInput": {
        "type": "object",
        "properties": {
          "_count": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "_all",
                "email",
                "id",
                "name",
                "passwordhash"
              ]
            },
            "minItems": 1
          },
          "_max": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "email",
                "id",
                "name",
                "passwordhash"
              ]
            },
            "minItems": 1
          },
          "_min": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "email",
                "id",
                "name",
                "passwordhash"
              ]
            },
            "minItems": 1
          },
          "email": {
            "type": "boolean"
          },
          "id": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "passwordhash": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "minProperties": 1
      },
      "UserGroupByOutputType": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/UserCountAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/UserMaxAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/UserMinAggregateOutputType"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "passwordhash": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UserMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "passwordhash": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "passwordhash": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserScalarFieldEnum": {
        "type": "string",
        "enum": [
          "email",
          "id",
          "name",
          "passwordhash"
        ]
      },
      "UserSelectInput": {
        "type": "object",
        "properties": {
          "$related": {
            "type": "boolean"
          },
          "$scalars": {
            "type": "boolean"
          },
          "email": {
            "type": "boolean"
          },
          "id": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "passwordhash": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "_ErrorResponse": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "details": {
            "type": "object"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "passwordhash": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "userCountOrderByAggregateInput": {
        "type": "object",
        "properties": {
          "email": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "name": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "passwordhash": {
            "$ref": "#/components/schemas/SortOrder"
          }
        },
        "additionalProperties": false
      },
      "userCreateInput": {
        "type": "object",
        "required": [
          "email",
          "passwordhash"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "passwordhash": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "userCreateManyInput": {
        "type": "object",
        "required": [
          "email",
          "passwordhash"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "passwordhash": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "userMaxOrderByAggregateInput": {
        "type": "object",
        "properties": {
          "email": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "name": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "passwordhash": {
            "$ref": "#/components/schemas/SortOrder"
          }
        },
        "additionalProperties": false
      },
      "userMinOrderByAggregateInput": {
        "type": "object",
        "properties": {
          "email": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "name": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "passwordhash": {
            "$ref": "#/components/schemas/SortOrder"
          }
        },
        "additionalProperties": false
      },
      "userOrderByWithAggregationInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/userCountOrderByAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/userMaxOrderByAggregateInput"
          },
          "_min": {
            "$ref": "#/components/schemas/userMinOrderByAggregateInput"
          },
          "email": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "name": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "passwordhash": {
            "$ref": "#/components/schemas/SortOrder"
          }
        },
        "additionalProperties": false
      },
      "userOrderByWithRelationInput": {
        "type": "object",
        "properties": {
          "email": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "name": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "passwordhash": {
            "$ref": "#/components/schemas/SortOrder"
          }
        },
        "additionalProperties": false
      },
      "userScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/userScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/userScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/userScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/userScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userScalarWhereWithAggregatesInput"
            }
          },
          "email": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "nullable": true
              }
            ],
            "nullable": true
          },
          "passwordhash": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "userUpdateInput": {
        "type": "object",
        "properties": {
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ],
            "nullable": true
          },
          "passwordhash": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "userUpdateManyInput": {
        "type": "object",
        "properties": {
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ],
            "nullable": true
          },
          "passwordhash": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "userWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/userWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/userWhereInput"
                }
              }
            ]
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/userWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/userWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/userWhereInput"
            }
          },
          "email": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string",
                "nullable": true
              }
            ],
            "nullable": true
          },
          "passwordhash": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "userWhereUniqueInput": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY",
        "description": "Authorization token"
      }
    }
  },
  "security": [
    {
      "ApiKey": []
    }
  ]
}
